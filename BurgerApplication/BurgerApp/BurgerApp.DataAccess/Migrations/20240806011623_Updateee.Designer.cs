// <auto-generated />
using System;
using BurgerApp.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BurgerApp.DataAccess.Migrations
{
    [DbContext(typeof(BurgerAppDbContext))]
    [Migration("20240806011623_Updateee")]
    partial class Updateee
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BurgerApp.Domain.Burger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("HasFries")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVegan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVegetarian")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Burger");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HasFries = true,
                            IsVegan = false,
                            IsVegetarian = false,
                            Name = "Hamburger",
                            Price = 8m
                        },
                        new
                        {
                            Id = 2,
                            HasFries = false,
                            IsVegan = true,
                            IsVegetarian = true,
                            Name = "Chicken Burger",
                            Price = 9m
                        },
                        new
                        {
                            Id = 5,
                            HasFries = true,
                            IsVegan = true,
                            IsVegetarian = true,
                            Name = "Bacon Burger",
                            Price = 8m
                        });
                });

            modelBuilder.Entity("BurgerApp.Domain.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ClosesAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpensAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Bitola",
                            ClosesAt = new DateTime(2024, 8, 6, 5, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationName = "BurgerBitola",
                            OpensAt = new DateTime(2024, 8, 6, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Address = "Skopje",
                            ClosesAt = new DateTime(2024, 8, 6, 5, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationName = "BurgerSkopje",
                            OpensAt = new DateTime(2024, 8, 6, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BurgerApp.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 SK",
                            FullName = "John Doe",
                            IsDelivered = false,
                            Location = "Location1"
                        },
                        new
                        {
                            Id = 6,
                            Address = "123 BT",
                            FullName = "Bob Bobsky",
                            IsDelivered = true,
                            Location = "Location2"
                        });
                });

            modelBuilder.Entity("BurgerOrder", b =>
                {
                    b.Property<int>("BurgersId")
                        .HasColumnType("int");

                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.HasKey("BurgersId", "OrdersId");

                    b.HasIndex("OrdersId");

                    b.ToTable("BurgerOrder");
                });

            modelBuilder.Entity("BurgerOrder", b =>
                {
                    b.HasOne("BurgerApp.Domain.Burger", null)
                        .WithMany()
                        .HasForeignKey("BurgersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BurgerApp.Domain.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
